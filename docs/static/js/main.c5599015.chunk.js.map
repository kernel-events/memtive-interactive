{"version":3,"sources":["../../src/components/ScrollAnimation/index.js","App.js","index.js"],"names":["gsap","ScrollAnimation","React","componentDidMount","this","__getScrollArea","props","guidGenerator","S4","Math","startAnimation","container","ref","renderer","loop","autoplay","path","URL","Blob","JSON","type","ScrollTrigger","trigger","scrub","pin","start","end","onUpdate","self","render","style","width","height","id","Component","App","document","documentElement","clientHeight","position","background","border","padding","top","data","animation","scrollArea","ReactDOM","getElementById"],"mappings":"mVAQAA,gC,IAEMC,c,QACJ,cAAmB,aACjB,wBACA,IAAWC,IAAX,YACA,YACA,WAAgB,WAAa,EAA7B,gBAJiB,E,2GAOnBC,6BACEC,KAAA,kB,EAGFC,2BACE,OAAQD,KAAKE,MAAN,WAAyB,KAAOF,KAAKE,MAArC,WAAP,U,EAGFC,yBACE,IAAIC,EAAK,WACP,OAAQ,OAAE,EAAIC,KAAL,UAAF,0BAAP,IAEF,OACED,IACAA,IADAA,IAGAA,IAHAA,IAKAA,IALAA,IAOAA,IAPAA,IASAA,IACAA,IACAA,K,EAIJE,0BAAiB,WACfN,KAAA,KAAY,kBAAqB,CAC/BO,UAAWP,KAAKQ,IADe,QAE/BC,SAF+B,MAG/BC,MAH+B,EAI/BC,UAJ+B,EAK/BC,KAAMC,IAAA,gBACJ,IAAIC,KAAK,CAACC,eAAef,KAAKE,MAA9B,OAA4C,CAC1Cc,KAAM,wBAKZC,WAAqB,CACnBC,QAAS,IAAMlB,KADI,SAEnBmB,OAFmB,EAGnBC,KAHmB,EAInBC,MAJmB,UAKnBC,IAAKtB,KALc,kBAMnBuB,SAAU,YACR,mBAAsBC,YAAiB,mBAAvC,W,EAKNC,kBACE,OACE,yBAAKC,MAAO,CAAEC,MAAF,OAAiBC,OAAQ,SACnC,yBACEpB,IAAKR,KADP,IAEE6B,GAAI7B,KAFN,SAGE0B,MAAO,CAAEC,MAAF,OAAiBC,OAAQ,Y,EAnEpC/B,CAAwBC,IAAMgC,W,OC8CrBC,EAnDH,WAAO,IAAD,EAChB,OACE,yBACEL,MAAO,CACLC,MAAO,QACPC,OAAgD,EAAxCI,SAASC,gBAAgBC,aAAmB,KACpD,cAAgBF,SAASC,gBAAgBC,aAAe,EAAI,GAAM,OAGpE,yBACER,OAAK,GACHS,SAAU,kBADP,yBAEO,UAFP,oBAGE,OAHF,wBAIM,QAJN,sBAKI,QALJ,cAMH,kBAAmB,UANhB,cAOH,cAAe,UAPZ,IAUL,yBAAKT,MAAO,CACVU,WAAY,UACZC,OAAQ,oBACR,gBAAiB,OACjBC,QAAS,OACT,eAAgB,OAChB,gBAAiB,OACjB,cAAe,gBACf,YAAa,OACb,MAAS,UACT,aAAc,WAVhB,eAYc,0BAAMZ,MAAO,CAAC,MAAS,YAAvB,UAZd,yBAeF,yBACEA,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRW,IAAK,QAGP,kBAAC,EAAD,CACEC,KAAMC,EACNC,WAAoD,EAAxCV,SAASC,gBAAgBC,kBC3C/CS,IAASlB,OAAO,kBAAC,EAAD,MAASO,SAASY,eAAe,U","file":"static/js/main.c5599015.chunk.js","sourcesContent":["import React from 'react'\n\nimport Lottie from 'lottie-web'\n\nimport gsap from 'gsap'\n\nimport { ScrollTrigger, Draggable, MotionPathPlugin } from 'gsap/all'\n\ngsap.registerPlugin(ScrollTrigger, Draggable, MotionPathPlugin)\n\nclass ScrollAnimation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n    this.anim = null\n    this.uniqueId = 'element_' + this.guidGenerator()\n  }\n\n  componentDidMount() {\n    this.startAnimation()\n  }\n\n  __getScrollArea() {\n    return (this.props.scrollArea)? '+=' + this.props.scrollArea : '+=1000'\n  }\n\n  guidGenerator() {\n    var S4 = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n    }\n    return (\n      S4() +\n      S4() +\n      '-' +\n      S4() +\n      '-' +\n      S4() +\n      '-' +\n      S4() +\n      '-' +\n      S4() +\n      S4() +\n      S4()\n    )\n  }\n\n  startAnimation() {\n    this.anim = Lottie.loadAnimation({\n      container: this.ref.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      path: URL.createObjectURL(\n        new Blob([JSON.stringify(this.props.data)], {\n          type: 'application/json',\n        })\n      ),\n    })\n\n    ScrollTrigger.create({\n      trigger: '#' + this.uniqueId,\n      scrub: true,\n      pin: true,\n      start: 'top top',\n      end: this.__getScrollArea(),\n      onUpdate: (self) => {\n        this.anim.goToAndStop(self.progress * (this.anim.totalFrames - 1), true)\n      },\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <div\n          ref={this.ref}\n          id={this.uniqueId}\n          style={{ width: '100%', height: '100%' }}\n        ></div>\n      </div>\n    )\n  }\n}\n\nexport default ScrollAnimation\n","import React from \"react\";\n\nimport { ScrollAnimation } from \"memtive-interactive\";\nimport animation from \"./animation.json\";\n\nconst App = () => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: document.documentElement.clientHeight * 5 + \"px\",\n        \"padding-top\": (document.documentElement.clientHeight / 2 - 29) + \"px\",\n      }}\n    >\n      <div\n        style={{\n          position: \"-webkit-sticky\",\n          position: \"sticky\",\n          top: \"5px\",\n          display: \"flex\",\n          width: \"100%\",\n          \"justify-content\": \"center\",\n          \"align-items\": \"center\",\n        }}\n      >\n        <div style={{\n          background: \"#636366\",\n          border: \"5px solid #AEAEB2\",\n          \"border-radius\": \"15px\",\n          padding: \"15px\",\n          \"padding-left\": \"30px\",\n          \"padding-right\": \"30px\",\n          \"font-family\": \"Menlo-Regular\",\n          \"font-size\": \"15px\",\n          \"color\": \"#FFFFFF\",\n          \"text-align\": \"center\",\n        }}>\n          npm install <span style={{\"color\": \"#8E8E93\"}}>--save</span> memtive-interactive\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          top: \"0px\",\n        }}\n      >\n        <ScrollAnimation\n          data={animation}\n          scrollArea={document.documentElement.clientHeight * 4}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}