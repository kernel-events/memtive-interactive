(this["webpackJsonpmemtive-interactive-example"]=this["webpackJsonpmemtive-interactive-example"]||[]).push([[0],{14:function(e,t,r){"use strict";r.r(t);r(9);var n=r(0),a=r.n(n),s=r(4),o=r.n(s),i=r(2),p=r(5),h=r.n(p),m=r(7),l=r(16),u=r(17),d=r(18);function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}m.a.registerPlugin(l.a,u.a,d.a);var b=function(e){var t,r;function n(t){var r;return(r=e.call(this,t)||this).ref=a.a.createRef(),r.anim=null,r.uniqueId="element_"+r.guidGenerator(),r}r=e,(t=n).prototype=Object.create(r.prototype),t.prototype.constructor=t,k(t,r);var s=n.prototype;return s.componentDidMount=function(){this.startAnimation()},s.__getScrollArea=function(){return this.props.scrollArea?"+="+this.props.scrollArea:"+=1000"},s.guidGenerator=function(){var e=function(){return(65536*(1+Math.random())|0).toString(16).substring(1)};return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},s.startAnimation=function(){var e=this;this.anim=h.a.loadAnimation({container:this.ref.current,renderer:"svg",loop:!1,autoplay:!1,path:URL.createObjectURL(new Blob([JSON.stringify(this.props.data)],{type:"application/json"}))}),l.a.create({trigger:"#"+this.uniqueId,scrub:!0,pin:!0,start:"top top",end:this.__getScrollArea(),onUpdate:function(t){e.anim.goToAndStop(t.progress*(e.anim.totalFrames-1),!0)}})},s.render=function(){return a.a.createElement("div",{style:{width:"100%",height:"100%"}},a.a.createElement("div",{ref:this.ref,id:this.uniqueId,style:{width:"100%",height:"100%"}}))},n}(a.a.Component),_=r(6),$=function(){var e;return a.a.createElement("div",{style:{width:"100vw",height:5*document.documentElement.clientHeight+"px","padding-top":document.documentElement.clientHeight/2-29+"px"}},a.a.createElement("div",{style:(e={position:"-webkit-sticky"},Object(i.a)(e,"position","sticky"),Object(i.a)(e,"top","5px"),Object(i.a)(e,"display","flex"),Object(i.a)(e,"width","100%"),Object(i.a)(e,"justify-content","center"),Object(i.a)(e,"align-items","center"),e)},a.a.createElement("div",{style:{background:"#636366",border:"5px solid #AEAEB2","border-radius":"15px",padding:"15px","padding-left":"30px","padding-right":"30px","font-family":"Menlo-Regular","font-size":"15px",color:"#FFFFFF","text-align":"center"}},"npm install ",a.a.createElement("span",{style:{color:"#8E8E93"}},"--save")," memtive-interactive")),a.a.createElement("div",{style:{width:"100vw",height:"100vh",top:"0px"}},a.a.createElement(b,{data:_,scrollArea:4*document.documentElement.clientHeight})))};o.a.render(a.a.createElement($,null),document.getElementById("root"))},6:function(e){e.exports=JSON.parse('{"v":"5.6.6","fr":30.0000305175781,"ip":0,"op":176.000179036458,"w":600,"h":350,"nm":"tapered hello","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.704],"y":[0]},"t":150,"s":[100]},{"t":162.000164794922,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[328.553,176.888,0],"ix":2},"a":{"a":0,"k":[64.553,83.888,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"Tapered Stroke","np":13,"mn":"Pseudo/Tapered Stroke","ix":1,"en":1,"ef":[{"ty":0,"nm":"Stroke Width","mn":"Pseudo/Tapered Stroke-0001","ix":1,"v":{"a":0,"k":10,"ix":1}},{"ty":0,"nm":"Taper Out","mn":"Pseudo/Tapered Stroke-0002","ix":2,"v":{"a":0,"k":67,"ix":2}},{"ty":0,"nm":"Taper In","mn":"Pseudo/Tapered Stroke-0003","ix":3,"v":{"a":0,"k":85,"ix":3}},{"ty":0,"nm":"End","mn":"Pseudo/Tapered Stroke-0004","ix":4,"v":{"a":1,"k":[{"i":{"x":[0.216],"y":[1]},"o":{"x":[0.306],"y":[0]},"t":0,"s":[0]},{"t":120.000122070313,"s":[100]}],"ix":4}},{"ty":0,"nm":"Segment Length","mn":"Pseudo/Tapered Stroke-0005","ix":5,"v":{"a":0,"k":5,"ix":5}},{"ty":0,"nm":"Offset","mn":"Pseudo/Tapered Stroke-0006","ix":6,"v":{"a":0,"k":-93,"ix":6}},{"ty":7,"nm":"Reverse Taper","mn":"Pseudo/Tapered Stroke-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"nm":"Taper In/Out","mn":"Pseudo/Tapered Stroke-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":7,"nm":"Trail","mn":"Pseudo/Tapered Stroke-0009","ix":9,"v":{"a":0,"k":1,"ix":9}},{"ty":7,"nm":"Auto Shrink In","mn":"Pseudo/Tapered Stroke-0010","ix":10,"v":{"a":0,"k":1,"ix":10}},{"ty":7,"nm":"Auto Shrink Out","mn":"Pseudo/Tapered Stroke-0011","ix":11,"v":{"a":0,"k":1,"ix":11}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[5.444,0],[0,4.899],[0,0],[0,0],[0,0],[5.444,0],[0,4.899],[0,0],[-5.172,0],[0,-5.036],[0,0],[0,0],[0,0],[-5.171,0],[0,-5.036]],"o":[[0,5.036],[-5.171,0],[0,0],[0,0],[0,0],[0,5.036],[-5.172,0],[0,0],[0.136,-4.899],[5.444,0],[0,0],[0,0],[0,0],[0.136,-4.899],[5.444,0],[0,0]],"v":[[-101.947,122.402],[-111.881,131.657],[-121.816,122.402],[-121.816,93.279],[-155.159,93.279],[-155.159,122.402],[-165.094,131.657],[-175.029,122.402],[-175.029,45.782],[-165.094,36.528],[-155.159,45.782],[-155.159,75.451],[-121.816,75.451],[-121.816,45.782],[-111.881,36.528],[-101.947,45.782]],"c":true},"ix":2},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,-4.899],[4.355,0],[0,0],[0,0],[0,0],[0,-4.763],[4.355,0],[0,0],[0,0],[0,0],[0,-4.763],[4.355,0],[0,0],[0.136,4.627],[0,0],[-5.036,0]],"o":[[4.491,0],[0,4.491],[0,0],[0,0],[0,0],[4.491,0],[0,4.491],[0,0],[0,0],[0,0],[4.491,0],[0,4.491],[0,0],[-5.036,0],[0,0],[0.136,-4.627],[0,0]],"v":[[-29.685,37.208],[-21.52,46.055],[-29.685,54.765],[-60.986,54.765],[-60.986,76.267],[-33.904,76.267],[-25.738,84.841],[-33.904,93.415],[-60.986,93.415],[-60.986,113.557],[-28.46,113.557],[-20.294,122.267],[-28.46,130.977],[-72.962,130.977],[-80.856,122.539],[-80.856,45.646],[-72.962,37.208]],"c":true},"ix":2},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-4.763],[4.355,-0.136],[0,0],[0,4.627],[0,0],[-5.172,0],[0,-5.036]],"o":[[0,0],[4.491,0],[0,4.491],[0,0],[-5.036,0],[0,0],[0.136,-4.899],[5.443,0],[0,0]],"v":[[15.767,113.557],[42.85,113.557],[51.015,122.267],[42.85,130.977],[3.791,130.977],[-4.103,122.539],[-4.103,45.782],[5.833,36.528],[15.767,45.782]],"c":true},"ix":2},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-4.763],[4.355,-0.136],[0,0],[0,4.627],[0,0],[-5.172,0],[0,-5.036]],"o":[[0,0],[4.491,0],[0,4.491],[0,0],[-5.035,0],[0,0],[0.136,-4.899],[5.443,0],[0,0]],"v":[[83.266,113.557],[110.348,113.557],[118.514,122.267],[110.348,130.977],[71.289,130.977],[63.396,122.539],[63.396,45.782],[73.33,36.528],[83.266,45.782]],"c":true},"ix":2},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[-26.538,0],[0,-26.674],[26.674,0],[0,26.402]],"o":[[26.674,0],[0,26.402],[-26.538,0],[0,-26.674]],"v":[[170.77,36.12],[218.401,84.296],[170.77,132.201],[123.272,84.296]],"c":true},"ix":2},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[-15.923,0],[0,15.651],[15.923,0],[0,-15.65]],"o":[[15.923,0],[0,-15.65],[-15.923,0],[0,15.651]],"v":[[170.77,112.876],[198.532,84.296],[170.77,55.445],[143.143,84.296]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[-6.396,0],[0,-6.532],[6.396,0],[0,6.669]],"o":[[6.396,0],[0,6.669],[-6.396,0],[0,-6.532]],"v":[[242.758,109.474],[254.598,120.77],[242.758,132.201],[231.054,120.77]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[4.354,0],[0.136,3.947],[0,0],[-5.308,0],[0.408,-5.171]],"o":[[-0.136,3.947],[-4.219,0],[0,0],[-0.272,-5.035],[5.58,0],[0,0]],"v":[[250.923,96.273],[242.894,103.35],[234.864,96.273],[232.687,45.646],[242.894,36.528],[253.101,45.646]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nif (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, $bm_sub(end, $bm_div(segLength, totalGroups)), end);\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, end, $bm_sub(end, $bm_div(segLength, totalGroups)));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    $bm_rt = linear(end, $bm_sub(100, segLength), 100, $bm_sub(end, $bm_div(segLength, totalGroups)), end);\\n} else {\\n    $bm_rt = $bm_sub(end, $bm_div(segLength, totalGroups));\\n}"},"e":{"a":0,"k":58,"ix":2,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Master Trim Paths","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.478,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":41,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_div(strokeWidth, totalGroups)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_div(strokeWidth, totalGroups)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_div(strokeWidth, totalGroups)));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_div(strokeWidth, totalGroups)), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_div(strokeWidth, totalGroups)), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_div(strokeWidth, totalGroups));\\n    }\\n} else if (taperBoth == 1) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul($bm_div(strokeWidth, totalGroups), 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul($bm_div(strokeWidth, totalGroups), 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul($bm_div(strokeWidth, totalGroups), 2)));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul($bm_div(strokeWidth, totalGroups), 2)), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul($bm_div(strokeWidth, totalGroups), 2)), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul($bm_div(strokeWidth, totalGroups), 2));\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, strokeWidth, trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, strokeWidth, 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, strokeWidth);\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, strokeWidth, trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, strokeWidth, 0);\\n    }\\n} else {\\n    $bm_rt = strokeWidth;\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Master Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Master Group","np":10,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 13","np":10,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 12","np":10,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 11","np":10,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 10","np":10,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 09","np":10,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 08","np":10,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 07","np":10,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 06","np":10,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 05","np":10,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 04","np":10,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 03","np":10,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 02","np":10,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-764,0],[766,0]],"c":false},"ix":2,"x":"var $bm_rt;\\nvar pathIndex = thisProperty.propertyGroup(1).propertyIndex;\\ntry {\\n    $bm_rt = content(\'Master Group\').content(pathIndex).path;\\n} catch (err) {\\n    $bm_rt = value;\\n}"},"nm":"Path 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar totalGroups = content(\'Duplicate Groups\').content.numProperties;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nif (trail == 1 && groupIndex == totalGroups) {\\n    $bm_rt = 0;\\n} else {\\n    $bm_rt = $bm_sub(masterStart, $bm_mul(segLength, groupIndex));\\n}"},"e":{"a":0,"k":50,"ix":2,"x":"var $bm_rt;\\nvar masterEnd = content(\'Master Group\').content(\'Master Trim Paths\').end;\\nvar masterStart = content(\'Master Group\').content(\'Master Trim Paths\').start;\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar segLength = $bm_sub(masterEnd, masterStart);\\n$bm_rt = $bm_sub(masterEnd, $bm_mul(segLength, groupIndex));"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Offset\');"},"m":1,"ix":9,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.057823910433,0.261057954676,0.921568627451,1],"ix":3,"x":"var $bm_rt;\\n$bm_rt = content(\'Master Group\').content(\'Master Stroke\').color;"},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5,"x":"var $bm_rt;\\nvar strokeWidth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Stroke Width\');\\nvar segLength = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Segment Length\');\\nvar end = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'End\');\\nvar totalGroups = $bm_sum(content(\'Duplicate Groups\').content.numProperties, 1);\\nvar groupIndex = thisProperty.propertyGroup(3).propertyIndex;\\nvar taperOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper Out\');\\nvar taperIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In\');\\nvar strokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sub(totalGroups, groupIndex));\\nvar reverseStrokeTaper = $bm_mul($bm_div(strokeWidth, totalGroups), $bm_sum(groupIndex, 1));\\nvar reverseTaper = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Reverse Taper\');\\nvar taperBoth = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Taper In/Out\');\\nvar autoShrinkIn = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink In\');\\nvar autoShrinkOut = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Auto Shrink Out\');\\nvar trail = thisLayer(\'Effects\')(\'Tapered Stroke\')(\'Trail\');\\nvar trailWidth = content(\'Duplicate Groups\').content(\'Taper 01\').content(\'Stroke 1\').strokeWidth;\\nif (trail == 1 && groupIndex + 1 == totalGroups) {\\n    if (reverseTaper == 1 && taperBoth == 0) {\\n        $bm_rt = linear(end, 0, segLength, 0, reverseStrokeTaper);\\n    } else if (taperBoth == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n    } else if (autoShrinkIn == 1) {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n    }\\n} else if (reverseTaper == 1 && taperBoth == 0) {\\n    if (autoShrinkIn == 1) {\\n        if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper));\\n        }\\n    } else if (autoShrinkOut == 1) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(taperOut, 0, 100, strokeWidth, reverseStrokeTaper);\\n    }\\n} else if (taperBoth == 1) {\\n    if (groupIndex < $bm_div(totalGroups, 2)) {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperOut, 0, 100, strokeWidth, $bm_mul(reverseStrokeTaper, 2));\\n        }\\n    } else {\\n        if (autoShrinkIn == 1) {\\n            if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n                if (trail == 1) {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n                } else {\\n                    $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n                }\\n            } else {\\n                $bm_rt = linear(end, 0, segLength, 0, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)));\\n            }\\n        } else if (autoShrinkOut == 1) {\\n            if (trail == 1) {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), trailWidth);\\n            } else {\\n                $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2)), 0);\\n            }\\n        } else {\\n            $bm_rt = linear(taperIn, 0, 100, strokeWidth, $bm_mul(strokeTaper, 2));\\n        }\\n    }\\n} else if (autoShrinkIn == 1) {\\n    if (autoShrinkOut == 1 && end > segLength && segLength <= 50) {\\n        if (trail == 1) {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n        } else {\\n            $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n        }\\n    } else {\\n        $bm_rt = linear(end, 0, segLength, 0, linear(taperOut, 0, 100, strokeWidth, strokeTaper));\\n    }\\n} else if (autoShrinkOut == 1) {\\n    if (trail == 1) {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), trailWidth);\\n    } else {\\n        $bm_rt = linear(end, $bm_sub(100, segLength), 100, linear(taperOut, 0, 100, strokeWidth, strokeTaper), 0);\\n    }\\n} else {\\n    $bm_rt = linear(taperOut, 0, 100, strokeWidth, strokeTaper);\\n}"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Taper 01","np":10,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[1,0],"ix":2},"a":{"a":0,"k":[1,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Duplicate Groups","np":13,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":241.000245157878,"st":0,"bm":0}],"markers":[]}')},8:function(e,t,r){e.exports=r(14)},9:function(e,t,r){}},[[8,1,2]]]);
//# sourceMappingURL=main.c5599015.chunk.js.map